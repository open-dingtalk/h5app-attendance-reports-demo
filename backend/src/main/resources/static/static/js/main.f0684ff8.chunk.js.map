{"version":3,"sources":["List.js","App.js","reportWebVitals.js","index.js"],"names":["buttonStyle","height","margin","padding","fontsize","TrData","props","this","items","map","item","checkType","userAddress","userCheckTime","sessionStorage","userId","React","Component","List","getAttendanceIntelligenceReports","getItem","axios","get","domain","then","response","console","log","catch","error","message","getAttendanceReports","setState","data","attendanceResultList","isLoaded","alert","JSON","stringify","state","style","onClick","dd","corpId","fetch","res","json","result","permission","requestAuthCode","onSuccess","code","setItem","userid","deptIdList","onFail","err","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAIMA,EAAc,CAACC,OAAQ,OAAQC,OAAQ,OAAQC,QAAS,OAAQC,SAAU,QAE1EC,E,kDACF,WAAYC,GAAQ,uCACVA,G,0CAIV,WACI,OACIC,KAAKD,MAAME,MAAMC,KAAI,SAACC,GAClB,IAAMC,EAAYD,EAAKC,UACjBC,EAAcF,EAAKE,YACnBC,EAAgBH,EAAKG,cAC3B,OACI,+BACI,6BAAKC,eAAeC,SACpB,6BAAKJ,IACL,6BAAKC,IACL,6BAAKC,c,GAjBRG,IAAMC,WA4FZC,E,kDAjEX,WAAYZ,GAAQ,IAAD,8BACf,cAAMA,IAOVa,iCAAmC,WAE/B,IAAMJ,EAASD,eAAeM,QAAQ,UAGtCC,IAAMC,IAAIC,EAAS,mCAAqCR,EAAS,0CAC5DS,MAAK,SAAAC,GAEFC,QAAQC,IAAIF,MAEfG,OAAM,SAAAC,GAEHH,QAAQC,IAAIE,EAAMC,aApBX,EAwBnBC,qBAAuB,WAEnB,IAAMhB,EAASD,eAAeM,QAAQ,UAGtCC,IAAMC,IAAIC,EAAS,sBAAwBR,EAAS,wBAC/CS,MAAK,SAAAC,GACF,EAAKO,SACD,CAACxB,MAAOiB,EAASQ,KAAKA,KAAKC,qBAAsBC,UAAU,OAIlEP,OAAM,SAAAC,GACHO,MAAMC,KAAKC,UAAUT,QAnC7B,EAAKU,MAAQ,CACT/B,MAAO,GACP2B,UAAU,GAJC,E,0CA0CnB,WACI,OAAQ,gCACJ,wBAAQK,MAAOxC,EAAayC,QAASlC,KAAKwB,qBAA1C,8DACA,wBAAQS,MAAOxC,EAAayC,QAASlC,KAAKY,iCAA1C,sFACA,kCACI,gCACA,+BACI,8CACA,0DACA,0DACA,+DAGJ,gCAEA,cAAC,EAAD,CAAQX,MAAOD,KAAKgC,MAAM/B,oB,GA3DvBQ,IAAMC,WCvBZM,EAAS,GAUtBmB,SAAS,WAUL,IAAIC,EACJC,MAAMrB,EAAS,WACVC,MAAK,SAAAqB,GAAG,OAAIA,EAAIC,UAChBtB,MAAK,SAACuB,GAEHJ,EAASI,EAAOd,KAAKU,OAErBD,UAAWM,WAAWC,gBAAgB,CAElCN,OAAQA,EACRO,UAAW,SAAUH,GAEjB1B,IAAMC,IAAIC,EAAS,mBAAqBwB,EAAOI,MAC1C3B,MAAK,SAAAC,GAMFX,eAAesC,QAAQ,SAAU3B,EAASQ,KAAKA,KAAKoB,QACpDvC,eAAesC,QAAQ,SAAU3B,EAASQ,KAAKA,KAAKqB,WAAW,OAElE1B,OAAM,SAAAC,GACHO,MAAMC,KAAKC,UAAUT,QAKjC0B,OAAQ,SAAUC,GACdpB,MAAMC,KAAKC,UAAUkB,aAM1BC,MAtDf,WACI,OACI,qBAAKC,UAAU,MAAf,SACI,cAAC,EAAD,OCAGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBrC,MAAK,YAAkD,IAA/CsC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.f0684ff8.chunk.js","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport {domain} from \"./App\";\n\nconst buttonStyle = {height: '60px', margin: '10px', padding: '10px', fontsize: '18px'};\n\nclass TrData extends React.Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    render() {\n        return (\n            this.props.items.map((item) => {\n                const checkType = item.checkType;\n                const userAddress = item.userAddress;\n                const userCheckTime = item.userCheckTime;\n                return (\n                    <tr>\n                        <td>{sessionStorage.userId}</td>\n                        <td>{checkType}</td>\n                        <td>{userAddress}</td>\n                        <td>{userCheckTime}</td>\n                    </tr>\n                )\n            })\n        )\n    }\n}\n\nclass List extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            items: [],\n            isLoaded: false\n        };\n    };\n\n    getAttendanceIntelligenceReports = () => {\n        // 获取存储的用户ID\n        const userId = sessionStorage.getItem('userId');\n        // demo直接构建了要请求的数据，实际开发需要从页面获取\n        // 获取用户考勤智能统计信息\n        axios.get(domain + '/attendance/intelligence?userId=' + userId + '&fromDate=2021-06-09&toDate=2021-06-25')\n            .then(response => {\n                // alert(JSON.stringify(response))\n                console.log(response)\n            })\n            .catch(error => {\n                // alert(JSON.stringify(error))\n                console.log(error.message)\n            })\n    };\n\n    getAttendanceReports = () => {\n        // 获取存储的用户ID\n        const userId = sessionStorage.getItem('userId');\n        // demo直接构建了要请求的数据，实际开发需要从页面获取\n        // 获取用户考勤信息\n        axios.get(domain + '/attendance?userId=' + userId + '&workDate=2021-06-25')\n            .then(response => {\n                this.setState(\n                    {items: response.data.data.attendanceResultList, isLoaded: true}\n                )\n                // console.log(response)\n            })\n            .catch(error => {\n                alert(JSON.stringify(error))\n                // console.log(error.message)\n            })\n    };\n\n    render() {\n        return (<div>\n            <button style={buttonStyle} onClick={this.getAttendanceReports}>获取用户考勤信息</button>\n            <button style={buttonStyle} onClick={this.getAttendanceIntelligenceReports}>获取用户智能考勤统计信息</button>\n            <table>\n                <thead>\n                <tr>\n                    <th>用户</th>\n                    <th>打卡类型</th>\n                    <th>打卡地址</th>\n                    <th>打卡时间</th>\n                </tr>\n                </thead>\n                <tbody>\n\n                <TrData items={this.state.items}/>\n\n                </tbody>\n            </table>\n        </div>)\n    }\n}\n\nexport default List;\n","import './App.css';\nimport axios from 'axios';\nimport * as dd from 'dingtalk-jsapi';\nimport List from \"./List\";\n\n//内网穿透工具介绍:\n// https://developers.dingtalk.com/document/resourcedownload/http-intranet-penetration?pnamespace=app\n// 替换成后端服务域名\nexport const domain = \"\";\nfunction App() {\n    return (\n        <div className=\"App\">\n            <List />\n        </div>\n    );\n};\n\n\ndd.ready(function () {\n    // let corpId;\n    // axios.get(domain + \"/config\")\n    //     .then(response => {\n    //         corpId = response.data.corpId;\n    //     })\n    //     .catch(error => {\n    //         alert(JSON.stringify(error))\n    //         // console.log(error.message)\n    //     })\n    let corpId;\n    fetch(domain + '/config')\n        .then(res => res.json())\n        .then((result) => {\n            // alert(JSON.stringify(result));\n            corpId = result.data.corpId;\n            // dd.ready参数为回调函数，在环境准备就绪时触发，jsapi的调用需要保证在该回调函数触发后调用，否则无效。\n            dd.runtime.permission.requestAuthCode({\n\n                corpId: corpId, //三方企业ID\n                onSuccess: function (result) {\n                    // alert(JSON.stringify(result));\n                    axios.get(domain + \"/login?authCode=\" + result.code)\n                        .then(response => {\n                            // alert(JSON.stringify(response));\n                            // alert(JSON.stringify(response.data));\n                            // alert(JSON.stringify(response.data.data.userid));\n                            // alert(JSON.stringify(response.data.data.deptIdList[0]));\n                            // 登录成功后储存用户部门和ID\n                            sessionStorage.setItem(\"userId\", response.data.data.userid);\n                            sessionStorage.setItem(\"deptId\", response.data.data.deptIdList[0]);\n                        })\n                        .catch(error => {\n                            alert(JSON.stringify(error))\n                            // console.log(error.message)\n                        })\n\n                },\n                onFail: function (err) {\n                    alert(JSON.stringify(err))\n                }\n            });\n        });\n});\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}